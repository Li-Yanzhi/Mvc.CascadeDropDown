
@using Mvc.CascadeDropDown
@model Mvc.CascadeDropDown.Test.Models.CascadingDropdownsModel


<script>
    function beforeSend(json)
    {
        json.currency = "USD"
        console.log("---beforeSend---");
        console.log(json);
        console.log("---End beforeSend---");
        return json;
    }

    function onComplete(data, error) {
        console.log("---onComplete---");
        console.log(data);
        console.log(error);
        console.log("---END onComplete---");
    }

    function onSuccess(data) {
        data.push({ Text: "added Item", Value: "" });
        console.log("---onSuccess---");
        console.log(data);
        console.log("---END onSuccess---");
    }

    function onFailure(error) {
        console.log("---onFailure---");
        console.log(error);
        console.log("---END onFailure---");
    }

</script>

@using (Html.BeginForm("CascadingDropDownTest", "Home", FormMethod.Post))
{

    <div class="form-horizontal">
        <div class="form-group">

            @Html.DropDownListFor(m => m.SelectedCountry, Model.Countries, "Please select a Country", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.SelectedCountry)
        </div>
        <div class="form-group">
            @Html.CascadingDropDownListFor(expression: m => m.SelectedCity,
                                triggeredByProperty: m => m.SelectedCountry,
                                url: Url.Action("GetCities", "Home"),
                                ajaxActionParamName: "country",
                                disabledWhenParentNotSelected: true,
                                htmlAttributes: new { @class = "form-control" },
                                options: new CascadeDropDownOptions
                                {
                                    BeforeSend = "beforeSend",
                                    HttpMethod = "post",
                                    OnCompleteGetData = "onComplete",
                                    OnFailureGetData = "onFailure",
                                    OnSuccessGetData = "onSuccess",
                                    EnableMinification = true
                                })
            @Html.ValidationMessageFor(m => m.SelectedCity)
        </div>
        <div class="form-group">
            @Html.CascadingDropDownListFor(m => m.SelectedStreet, m => m.SelectedCity, Url.Action("GetStreets", "Home"), "city", "Please select a Street", true, new { @class = "form-control" }, new CascadeDropDownOptions
       {
           EnableMinification = true
       })
            @Html.ValidationMessageFor(m => m.SelectedStreet)
        </div>
    </div>

    <input type="submit" value="Submit" />

}