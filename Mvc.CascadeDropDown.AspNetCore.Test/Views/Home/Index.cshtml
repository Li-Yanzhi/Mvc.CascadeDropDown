@using Mvc.CascadeDropDown.Infrastructure
@using Mvc.CascadeDropDown.AspNetCore
@model Mvc.CascadeDropDown.AspNetCore.Test.Models.CascadingDropdownsModel


<script>
    function beforeSend(json)
    {
        json.currency = json.country == "US" ? "USD" : "GBP";
        alert("<p><strong>Going to send:</strong></p><p><small>" + JSON.stringify(json, null, "\t") + "</small></p>", "BeforeSend callback", "success");
        return json;
    }

    function onComplete(data, error) {
        if (data) {
            msg = "<small>" + JSON.stringify(data, null, "\t") + "</small>";
            alert(msg, "Successfull onComplete callback", "info");
        }
        if (error)
        {
            msg = "<p><strong>Got Error:</strong>></p><p>" + error + "</p>";
            alert(msg, "Error onComplete callback", "info");
        }
    }

    function onSuccess(data) {
        data.push({ text: "added Item", value: "" });
        msg = "<p><strong>Received data was modified</strong></p><p><small>" + JSON.stringify(data, null, "\t") + "</small></p>";
        alert(msg, "OnSuccess callback", "success");
    }

    function onFailure(responseText, responseStatus, statusText) {
        var obj = {
            responseText: responseText,
            responseStatus: responseStatus,
            statusText: statusText
        }
        msg = "<p><strong>Got Error:</strong>></p><p><small>" + JSON.stringify(obj, null, "\t") + "</small></p>"
        alert(msg, "OnFailure callback", "error");
    }

</script>

@using (Html.BeginForm("CascadingDropDownTest", "Home", FormMethod.Post))
{

    <div class="form-horizontal">
        <div class="form-group">

            @Html.DropDownListFor(m => m.SelectedCountry, Model.Countries, "Please select a Country", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.SelectedCountry)
        </div>
        <div class="form-group">
            @Html.CascadingDropDownListFor(expression: m => m.SelectedCity, triggeredByProperty: m => m.SelectedCountry, url: Url.Action("GetCities", "Home"), ajaxActionParamName: "country", disabledWhenParentNotSelected: true, htmlAttributes: new { @class = "form-control" }, options: new CascadeDropDownOptions { BeforeSend = "beforeSend", HttpMethod = "post", OnCompleteGetData = "onComplete", OnFailureGetData = "onFailure", OnSuccessGetData = "onSuccess" })
            @Html.ValidationMessageFor(m => m.SelectedCity)
        </div>
        <div class="form-group">
            @Html.CascadingDropDownListFor(m => m.SelectedStreet, m => m.SelectedCity, Url.Action("GetStreets", "Home"), "city", "Please select a Street", true, new { @class = "form-control" }, new CascadeDropDownOptions
           {
               OnFailureGetData = "onFailure",
           })
            @Html.ValidationMessageFor(m => m.SelectedStreet)
        </div>
    </div>

    <input type="submit" value="Submit" class="btn btn-primary" />

}